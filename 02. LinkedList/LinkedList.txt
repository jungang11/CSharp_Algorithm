ArrayList, LinkedList 비교

LinkedList는 몇 개의 참조자만 바꾸면 새로운 자료의 추가나 기존 자료의 삭제를 위치에 관계없이
빠른 시간안에 (O(1)) 수행 할 수 있지만 ArrayList는 O(N)의 시간이 걸림.
그래서 ArrayList는 자료의 갯수에 영향을 받지만 LinkedList는 자료의 갯수의 영향을 받지 않음.

ArrayList는 크기가 한정되어 자료를 넣다보면 포화되는데 이때 크기를 재조정하는 연산을 수행해야
자료를 다시 삽입할 수 있는 반면 LinkedList는 제한없이 자료를 삽입할 수 있음.(메모리의 용량 까지만)

ArrayList는 데이터가 연속적으로 저장되고 LinkedList는 데이터가 불연속적으로 저장되기 때문에
이곳저곳 산재된 노드들에 접근하는데 ArrayList보다 오래 걸림.

LinkedList는 배열식 구조와 다르게 데이터가 연속적으로 저장되있지 않아 인덱스를 이용할 수 없음
그래서 특정 요소에 접근하기 위해서는 순차 탐색이 필요함. 하지만 ArrayList는 자료가 연속적으로
저장되어 있기 때문에 인덱스를 이용하기 때문에 접근의 경우 ArrayList가 훨씬 빠름.



LinkedList 기술면접 조사

각 노드가 데이터와 주소를 가지고 한 줄로 연결되어 있는 방식의 자료구조

노드의 이전 노드와 다음 노드의 주소를 참조해 연결

Node는 LinkedList에 객체를 추가하거나 삭제하면 앞/뒤 링크만 변경되고 나머지 링크는 변경되지 않음

중간에 데이터를 추가, 삭제 하여도 전체 인덱스를 한 칸 밀거나 당기는 일 없이 참조자 몇 개 바꾸어주면 되기에
배열식 구조에 비해 추가나 삭제가 용이함

