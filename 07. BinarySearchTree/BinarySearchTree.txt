<이진 탐색 트리 등장 배경>
- 이진 탐색	  : 탐색 시간복잡도 O(logN), 삽입이나 삭제 불가능
- 연결 리스트 : 탐색 시간복잡도 O(N), 삽입이나 삭제 시 O(1) 소요
이 둘의 장점을 챙긴 자료구조가 이진 탐색 트리
탐색의 효율을 높이고 자료의 삽입과 삭제도 가능케 하는 것이 핵심
이진 탐색 트리는 트리 구조로써 한 노드가 자신보다 작은 값을 가진 노드와
자신보다 큰 값을 가진 노드를 가지는 구조를 가짐

<이진 탐색 트리 특징>
- 각 노드의 자식이 2개 이하
- 각 노드의 왼쪽 자식은 부모보다 작고, 오른쪽 자식은 큼
- 부모 노드의 왼쪽과 오른쪽 서브트리도 이진 탐색 트리
- 모든 노드는 유일한 키를 갖게 됨 -> 검색 목적 자료구조이기 때문
- 클래스는 SortedSet<T> 중복 요소를 허용하지 않음

<트리형 자료구조 순회 순서 3가지>
- 1. 전위순회 : 노드, 왼쪽, 오른쪽
- 2. 중위순회 : 왼쪽, 노드, 오른쪽 => 이진 탐색트리의 순회는 중위순회 => 오름차순으로 정렬됨
- 3. 후위순회 : 왼쪽, 오른쪽, 노드
